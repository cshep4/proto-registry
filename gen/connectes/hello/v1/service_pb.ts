// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file hello/v1/service.proto (package hello.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * SayHelloRequest is the request message containing the user's name.
 *
 * @generated from message hello.v1.SayHelloRequest
 */
export class SayHelloRequest extends Message<SayHelloRequest> {
  /**
   * name is the name for the response greeting.
   * Field validation is added to ensure the minimum length is 1.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<SayHelloRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "hello.v1.SayHelloRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SayHelloRequest {
    return new SayHelloRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SayHelloRequest {
    return new SayHelloRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SayHelloRequest {
    return new SayHelloRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SayHelloRequest | PlainMessage<SayHelloRequest> | undefined, b: SayHelloRequest | PlainMessage<SayHelloRequest> | undefined): boolean {
    return proto3.util.equals(SayHelloRequest, a, b);
  }
}

/**
 * SayHelloResponse is the response message containing the greeting.
 *
 * @generated from message hello.v1.SayHelloResponse
 */
export class SayHelloResponse extends Message<SayHelloResponse> {
  /**
   * message is the greeting message.
   *
   * @generated from field: string message = 1;
   */
  message = "";

  constructor(data?: PartialMessage<SayHelloResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "hello.v1.SayHelloResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SayHelloResponse {
    return new SayHelloResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SayHelloResponse {
    return new SayHelloResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SayHelloResponse {
    return new SayHelloResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SayHelloResponse | PlainMessage<SayHelloResponse> | undefined, b: SayHelloResponse | PlainMessage<SayHelloResponse> | undefined): boolean {
    return proto3.util.equals(SayHelloResponse, a, b);
  }
}

