# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from streaming.v1 import streaming_pb2 as streaming_dot_v1_dot_streaming__pb2


class StreamingServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ServerStreaming = channel.unary_stream(
                '/streaming.v1.StreamingService/ServerStreaming',
                request_serializer=streaming_dot_v1_dot_streaming__pb2.ServerStreamingRequest.SerializeToString,
                response_deserializer=streaming_dot_v1_dot_streaming__pb2.ServerStreamingResponse.FromString,
                )
        self.ClientStreaming = channel.stream_unary(
                '/streaming.v1.StreamingService/ClientStreaming',
                request_serializer=streaming_dot_v1_dot_streaming__pb2.ClientStreamingRequest.SerializeToString,
                response_deserializer=streaming_dot_v1_dot_streaming__pb2.ClientStreamingResponse.FromString,
                )
        self.BiDirectionalStreaming = channel.stream_stream(
                '/streaming.v1.StreamingService/BiDirectionalStreaming',
                request_serializer=streaming_dot_v1_dot_streaming__pb2.BiDirectionalStreamingRequest.SerializeToString,
                response_deserializer=streaming_dot_v1_dot_streaming__pb2.BiDirectionalStreamingResponse.FromString,
                )


class StreamingServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ServerStreaming(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClientStreaming(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BiDirectionalStreaming(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StreamingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ServerStreaming': grpc.unary_stream_rpc_method_handler(
                    servicer.ServerStreaming,
                    request_deserializer=streaming_dot_v1_dot_streaming__pb2.ServerStreamingRequest.FromString,
                    response_serializer=streaming_dot_v1_dot_streaming__pb2.ServerStreamingResponse.SerializeToString,
            ),
            'ClientStreaming': grpc.stream_unary_rpc_method_handler(
                    servicer.ClientStreaming,
                    request_deserializer=streaming_dot_v1_dot_streaming__pb2.ClientStreamingRequest.FromString,
                    response_serializer=streaming_dot_v1_dot_streaming__pb2.ClientStreamingResponse.SerializeToString,
            ),
            'BiDirectionalStreaming': grpc.stream_stream_rpc_method_handler(
                    servicer.BiDirectionalStreaming,
                    request_deserializer=streaming_dot_v1_dot_streaming__pb2.BiDirectionalStreamingRequest.FromString,
                    response_serializer=streaming_dot_v1_dot_streaming__pb2.BiDirectionalStreamingResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'streaming.v1.StreamingService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class StreamingService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ServerStreaming(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/streaming.v1.StreamingService/ServerStreaming',
            streaming_dot_v1_dot_streaming__pb2.ServerStreamingRequest.SerializeToString,
            streaming_dot_v1_dot_streaming__pb2.ServerStreamingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClientStreaming(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/streaming.v1.StreamingService/ClientStreaming',
            streaming_dot_v1_dot_streaming__pb2.ClientStreamingRequest.SerializeToString,
            streaming_dot_v1_dot_streaming__pb2.ClientStreamingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BiDirectionalStreaming(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/streaming.v1.StreamingService/BiDirectionalStreaming',
            streaming_dot_v1_dot_streaming__pb2.BiDirectionalStreamingRequest.SerializeToString,
            streaming_dot_v1_dot_streaming__pb2.BiDirectionalStreamingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
